#include <iostream>
#include<stack>
#include<vector>
#include<algorithm>

using namespace std;

void NearestGreaterNumber(long arr[], int size)
{
    vector<long>v;
    stack<long>s;
    for( int i = size-1; i>=0; i--)
    {
        if(s.size()==0)
        {
            v.push_back(-1);
            s.push(arr[i]);
            
        }
        else if(s.size()>0 && s.top()>arr[i])
        {
            v.push_back(s.top());
            s.push(arr[i]);

        }
        else if(s.size()>0 && s.top()<arr[i])
        {
            while(s.size()>0 && s.top()<arr[i])
            {
                s.pop();
            }
            if(s.size()==0)
            {
                 v.push_back(-1);
                 s.push(arr[i]);
            
            }
            else
            {
                v.push_back(s.top());
                s.push(arr[i]);
               
            }
        }
    }
    reverse(v.begin(),v.end());
   
    
    
	}
    
   
}



int main() {
	int t;
	cin>>t;
	while(t>0)
	{
	    int n;
	    cin>>n;
	    long arr[n];
	    for(int j = 0; j<n; j++)
	    {
	        cin>>arr[j];
	  
	    }
	  NearestGreaterNumber(arr, n);  
	   cout<<"\n";
	    t--;
	}
	return 0;
}
